Authentication & Authorization
------------------------------
-> Event Booking App (MEAN Stack Application)
---------------------
-> Free Events -> public access
-> Pro Events -> private access (Login)
-> Upload Events -> private access + Auth (Login + Admin)

-> Login
-> Registration

----------------------------------------------------------------------------
NGRX Configuration
-----------------------------------------------------------------------------
Install NGRX Librarires
------------------------------------------------
npm install @ngrx/store
npm install @ngrx/store-devtools
npm install @ngrx/effects
npm install @ngrx/schematics
 
npm install @ngrx/store @ngrx/store-devtools @ngrx/effects @ngrx/schematics

configure @ngrx/schematics with Angular CLI
-------------------------------------------
	ng add @ngrx/schematics@latest

Root (store , effect) (/src/app folder)
---------------------
ng generate @ngrx/schematics:store State --root --module app.module.ts
ng generate @ngrx/schematics:effect Root --root --module app.module.ts --group

users(actions , reducers , effects) (users folder)
---------------------------------------
ng g module users --route users --module app.module.ts

ng generate @ngrx/schematics:store State --module users.module.ts
ng generate @ngrx/schematics:effect user --module users.module.ts --group

ng generate @ngrx/schematics:reducer user --group
ng generate @ngrx/schematics:action user --group

events(actions , reducers , effects) (events folder)
---------------------------------------
ng g module events --route events --module app.module.ts

ng generate @ngrx/schematics:store State --module events.module.ts
ng generate @ngrx/schematics:effect event --module events.module.ts --group

ng generate @ngrx/schematics:reducer event --group
ng generate @ngrx/schematics:action event --group


NOTE : change "reducers/index.ts" file with this for each module
		import { environment } from '../../../environments/environment';


----------------------------------------------------------------------------
Application State 
-----------------------------------------------------------------------------
{
	event : {
		loading:boolean,
		events:IEvent[],
		errorMessage:string
	},
	user : {
		loading : boolean,
		user : IUser,
		isSubmitted: boolean,
		isAuthenticated : boolean,
		token : string,
		errorMessage: string,
		
	}
}

client Side Configuration (Angular)
-------------------------
Folder Structure
-----------------
app
	-> root
		-> components
			-> home
			-> navbar
		-> models
		-> services
		-> guards
		-> interceptors
	-> 	users (ng g module users --route users --module app.module)
		 -> components
				-> login
				-> registration
		 -> models
				-> IUser
		 -> services
				-> user.service
	-> events (ng g module events --route events --module app.module)
		-> components
				-> free-events
				-> pro-events
				-> upload-events
		-> models
				-> IEvent
		-> services
				-> event.service


Server Side Configuration (Express JS , Mongo DB)
-------------------------
modules : express , cors , dotenv , bcryptjs , gravatar , jsonwebtoken , mongoose

npm install express cors dotenv bcryptjs gravatar jsonwebtoken mongoose

REST API
--------
router : userRouter -> /users
         eventRouter -> /events

userRouter :
------------
1. Registration : URL : http://127.0.0.1:5000/users/register
                  method : POST
				  fields : name , email , password

2. Login : URL : http://127.0.0.1:5000/users/login
                  method : POST
				  fields : email , password


eventRouter :
-------------
1. Get Free Events : URL : http://127.0.0.1:5000/events/free
					  method : GET
					  fields : no-fields

2. Get PRO Events : URL : http://127.0.0.1:5000/events/pro
					  method : GET
					  fields : no-fields

3. Upload Events : URL : http://127.0.0.1:5000/events/upload
					  method : POST
					  fields : name , image , date , price , type , info

DATABASE Configuration
-----------------------
Database Name : events-booking-angular
Tables : users , events
Users Table ->
		name : string,
		email : string,
		password : string,
		avatar : string,
		isAdmin : boolean,
		created : date

Events Table ->

		name : string,
		image : string,
		date : string,
		price : number,
		type : string,
		info : string,
		created : date







